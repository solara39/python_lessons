# -*- coding: utf-8 -*-
"""Python_module.ipynb のコピー

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1teso_Q-bSYgRn3rf1fv__-liDtK4txUc
"""

# コード1
import statistics
data = [2, 5, 4, 3, 6, 1, 7, 0, 9, 8]
statistics.mean(data)

# コード2
from statistics import mean
mean(data)

# コード5
import pandas as pd

# コード6
ser = pd.Series([2, 5, 4, 3])
ser

# コード7
df = pd.DataFrame([[1, 2, 3],[4,5,6]])
print(df)

# コード8
import pandas as pd
URL = 'https://www.nstac.go.jp/sys/files/SSDSE-E-2022v2.csv'
df = pd.read_csv(URL, skiprows=[0,1,3], encoding='shift_jis')
df

# コード9
df.index

# コード10
df.columns

# コード11
df[44:47]

# コード12
df['総人口']

# コード13
df[['都道府県', '総人口', '出生数']]

# コード14
df[(df['総人口'] <=1500000) & (df['出生数'] >= 10000)]

# コード15
df.loc[[12, 26], ['都道府県', '総人口', '出生数']]

# コード16
df.loc[[12, 26], ['都道府県', '総人口', '出生数']] = 0

# コード17
import numpy as np

# コード18
array_1d = np.array([1, 2, 3, 4])
array_1d

# コード19
array_2d = np.array([[1, 2, 3], [4, 5, 6]])
array_2d

# コード20
print('次元数:', array_1d.ndim, '形状:', array_1d.shape)
print('次元数:', array_2d.ndim, '形状:', array_2d.shape)

# コード21
array_1d.reshape(2, 2)

# コード22
array_2d.reshape(1, -1)

# コード23
np.arange(0, 10, 1)

# コード24
np.zeros(5)

# コード25
np.zeros((3, 3))

# コード26
np.ones((3, 3))

# コード27
array_1d[0]

# コード28
array_1d[-1]

# コード29
array_1d[0:2]

# コード30
array_2d[0, 2]

# コード31
array_2d[0:2, 0:2]

# コード32
array_1d[[3, 1, 2]]

# コード33
array_1d < 3

# コード34
array_1d[array_1d < 3]

# コード35
2 * array_1d

# コード36
array_1d * array_1d

# コード37
array_2d + array_2d

# コード38
np.power(array_1d, 2)

# コード39
np.array([2, 2, 2, 2]) * array_1d

# コード40
np.array([2, 2, 2]) * array_2d

# コード41
import matplotlib.pyplot as plt

# コード42
x1 = np.arange(0, 11)
y1 = np.arange(0, 11)
plt.scatter(x1, y1)
plt.show()

# コード43
plt.plot(x1, y1)
plt.show()

# コード44
x2 = np.arange(0, 10.1, 0.1)
y2 = x2 ** 2
plt.plot(x2, y2)
plt.show()

# コード45
plt.plot(x1, y1, label='graph1')
plt.plot(x2, y2, label='graph2')
plt.title('title')
plt.xlabel('x')
plt.ylabel('y')
plt.grid(True)
plt.legend()
plt.show()

