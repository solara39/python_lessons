# -*- coding: utf-8 -*-
"""ex6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vvibruhxQknrIaccIFGrq0EowE_YTg7k

# 第6回本課題

[English version](https://colab.research.google.com/drive/12u7wmEYwpobZj1GSO5tkHfZ9lUDDLhNF)

## Ex6-1. 日付を生成するイテレータ

クラス `year_date` のコンストラクタは西暦年を引数とし、
そのオブジェクトは、その年の日付を西暦年と月と日のタプルとして生成するイテレータとします。
クラス `year_date` を定義してください。西暦年が閏年かどうかは、
400で割り切れるか、100で割り切れずに4で割り切れるかで判定してください。
"""

##########################################################
##  <[ ex6-1-year_date ]> 解答セル (Answer cell)
##  このセルの複製・削除を禁ず (Neither copy nor delete this cell)
##########################################################

QUESTION_EXISTS = False # 質問がある場合は True に変えて，このセル内のコメントとして質問を記述してください
                        # Change to True if you have questions, and describe them as comments in this cell

class year_date:
  def __init__(self, year):
    self.year = year
    self.days_of_month = [31, 29 if self.is_leap_year() else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
    self.date = (year, 1, 0)

  def __iter__(self):
    return self

  def __next__(self):
    year, month, day = self.date
    day += 1
    if month == 12 and day == 32:
      raise StopIteration
    elif self.days_of_month[month - 1] < day:
      month += 1
      day = 1
    self.date = (year, month, day)
    return self.date

  def is_leap_year(self):
    if (self.year % 400 == 0) or (self.year % 100 != 0 and self.year % 4 == 0):
      return True
    else:
      return False

"""提出前に以下のテストセルを実行し、エラーがでないことを確認してください。"""

yd = year_date(2020)
assert next(yd) == (2020, 1, 1)
for _ in range(100):
    next(yd)
assert next(yd) == (2020, 4, 11)
yd = year_date(2021)
for _ in range(100):
    next(yd)
assert next(yd) == (2021, 4, 11)
yd = year_date(2024)
for _ in range(365):
    next(yd)
assert next(yd) == (2024, 12, 31)
try:
    next(yd)
    assert False
except StopIteration:
    pass

