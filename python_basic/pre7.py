# -*- coding: utf-8 -*-
"""pre7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_tbAylqrBZqxd1k-SiMFQuUeZidvW7ij
"""

##================================================
## このセルを最初に実行せよ---Run this cell first.
##================================================
!wget -P . https://raw.githubusercontent.com/UTokyo-IPP/annex/master/assignments/pre7/iris.csv
!wget -P . https://raw.githubusercontent.com/UTokyo-IPP/annex/master/assignments/pre7/titanic.csv

"""# 第7回予習課題

[English version](https://colab.research.google.com/drive/1VK4rBJyJeRCct-TBdTvgInMbsOC_8x44)

## Pre7-1. pandasライブラリ

次のような計算を行う関数 `min_sepal_width(filepath, species, sepal_len)` を定義してください。

1. `filepath` で指定されたCSVファイルをデータフレームオブジェクト (`pandas.DataFrame`) としてロードし、
2. `'species'` 列の値が引数 `species`（値は `'setosa'`, `'virginica'`, `'versicolor'` のいずれか）の値と一致、かつ `'sepal_length'` 列の値が引数 `sepal_len` の値以上である行を抽出し、
3. その抽出した行から `'sepal_width'` 列の最小値を返す。

尚、データフレーム `df`の列 `'Name'`の最小値は `min` メソッドを使って `df['Name'].min()` とすれば計算できます。
"""

##########################################################
##  <[ pre7-1-min_sepal_width ]> 解答セル (Answer cell)
##  このセルの複製・削除を禁ず (Neither copy nor delete this cell)
##########################################################

QUESTION_EXISTS = False # 質問がある場合は True に変えて，このセル内のコメントとして質問を記述してください
                        # Change to True if you have questions, and describe them as comments in this cell

import pandas as pd

def min_sepal_width(filepath, species, sepal_len):
    df = pd.read_csv(filepath)
    selected_rows = df[(df['species'] == species) & (df['sepal_length'] >= sepal_len)]
    return selected_rows['sepal_width'].min()

"""提出前に以下のテストセルを実行し、エラーがでないことを確認してください。"""

assert round(min_sepal_width('iris.csv', 'setosa', 5), 1) == 3.0
assert round(min_sepal_width('iris.csv', 'versicolor', 5), 1) == 2.0
assert round(min_sepal_width('iris.csv', 'virginica', 5), 1) == 2.2
assert round(min_sepal_width('iris.csv', 'setosa', 5.8), 1) == 4.0
assert round(min_sepal_width('iris.csv', 'versicolor', 5.8), 1) == 2.2
assert round(min_sepal_width('iris.csv', 'virginica', 5.8), 1) == 2.2

"""## Pre7-2. scikit-learnライブラリ

タイタニック号の乗船者のデータを含むCSVファイル `'titanic.csv'` には以下のように乗船者の特徴量とその乗船者が生存したかどうかの情報が含まれています。
"""

# タイタニックデータセット
import pandas as pd
pd.read_csv('titanic.csv')[['Pclass','Fare','Age','Survived']].head()

"""以下の `predict_titanic` 関数を完成させてください。

1. CSVファイル`'titanic.csv'`を`pandas` モジュールのデータフレームオブジェクトとしてロード
2. 乗船者の3つの特徴量 （`Pclass`（客室の等級） と `Fare`（運賃）と`Age`（年齢）） からその乗船者が生存したか（ラベル `Survived` ：生存は`1`、非生存は`0`）を予測するモデルをロジスティック回帰を用いて学習し、その予測精度 （`accuracy_score`） を返す

`predict_titanic` 関数は `train_test_split` でデータを分割する際の `test_size` と `random_state` の値をそれぞれ `tsize` と `rstate` 引数で受け取ります。また、`train_test_split` では `stratify` にラベルデータを指定してください。
"""

##########################################################
##  <[ pre7-2-predict_titanic ]> 解答セル (Answer cell)
##  このセルの複製・削除を禁ず (Neither copy nor delete this cell)
##########################################################

QUESTION_EXISTS = False # 質問がある場合は True に変えて，このセル内のコメントとして質問を記述してください
                        # Change to True if you have questions, and describe them as comments in this cell

import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

def predict_titanic(tsize, rstate):
    df = pd.read_csv('titanic.csv')
    X = df[['Pclass', 'Fare', 'Age']]
    y = df[['Survived']]
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=tsize, random_state=rstate, stratify=y)
    model = LogisticRegression(solver='lbfgs', multi_class='auto')
    model.fit(X_train, y_train)
    pred = model.predict(X_test)

    return accuracy_score(y_test, pred)

"""提出前に以下のテストセルを実行し、エラーがでないことを確認してください。"""

assert round(predict_titanic(0.3, 10), 2) == 0.73
assert round(predict_titanic(0.2, 10), 2) == 0.71
assert round(predict_titanic(0.3, 0), 2) == 0.71
assert round(predict_titanic(0.2, 0), 2) == 0.70

